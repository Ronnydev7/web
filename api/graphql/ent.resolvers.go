package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"api/ent/entgenerated"
	"api/graphql/gqlgenerated"
	"context"

	"entgo.io/contrib/entgql"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id int) (entgenerated.Noder, error) {
	return r.client.Noder(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []int) ([]entgenerated.Noder, error) {
	return r.client.Noders(ctx, ids)
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context, after *entgql.Cursor[int], first *int, before *entgql.Cursor[int], last *int, where *entgenerated.UserWhereInput) (*entgenerated.UserConnection, error) {
	return r.client.User.Query().Where(where.Predicates...).Paginate(
		ctx,
		after,
		first,
		before,
		last,
	)
}

// Query returns gqlgenerated.QueryResolver implementation.
func (r *Resolver) Query() gqlgenerated.QueryResolver { return &queryResolver{r} }

// UserPublicProfile returns gqlgenerated.UserPublicProfileResolver implementation.
func (r *Resolver) UserPublicProfile() gqlgenerated.UserPublicProfileResolver {
	return &userPublicProfileResolver{r}
}

type queryResolver struct{ *Resolver }
type userPublicProfileResolver struct{ *Resolver }
