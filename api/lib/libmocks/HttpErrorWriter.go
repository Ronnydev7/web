// Code generated by mockery v2.36.1. DO NOT EDIT.

package libmocks

import mock "github.com/stretchr/testify/mock"

// HttpErrorWriter is an autogenerated mock type for the HttpErrorWriter type
type HttpErrorWriter struct {
	mock.Mock
}

type HttpErrorWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *HttpErrorWriter) EXPECT() *HttpErrorWriter_Expecter {
	return &HttpErrorWriter_Expecter{mock: &_m.Mock}
}

// Write provides a mock function with given fields: msg, statusCode
func (_m *HttpErrorWriter) Write(msg string, statusCode int) {
	_m.Called(msg, statusCode)
}

// HttpErrorWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type HttpErrorWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - msg string
//   - statusCode int
func (_e *HttpErrorWriter_Expecter) Write(msg interface{}, statusCode interface{}) *HttpErrorWriter_Write_Call {
	return &HttpErrorWriter_Write_Call{Call: _e.mock.On("Write", msg, statusCode)}
}

func (_c *HttpErrorWriter_Write_Call) Run(run func(msg string, statusCode int)) *HttpErrorWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *HttpErrorWriter_Write_Call) Return() *HttpErrorWriter_Write_Call {
	_c.Call.Return()
	return _c
}

func (_c *HttpErrorWriter_Write_Call) RunAndReturn(run func(string, int)) *HttpErrorWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// WriteUnauthorized provides a mock function with given fields:
func (_m *HttpErrorWriter) WriteUnauthorized() {
	_m.Called()
}

// HttpErrorWriter_WriteUnauthorized_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteUnauthorized'
type HttpErrorWriter_WriteUnauthorized_Call struct {
	*mock.Call
}

// WriteUnauthorized is a helper method to define mock.On call
func (_e *HttpErrorWriter_Expecter) WriteUnauthorized() *HttpErrorWriter_WriteUnauthorized_Call {
	return &HttpErrorWriter_WriteUnauthorized_Call{Call: _e.mock.On("WriteUnauthorized")}
}

func (_c *HttpErrorWriter_WriteUnauthorized_Call) Run(run func()) *HttpErrorWriter_WriteUnauthorized_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HttpErrorWriter_WriteUnauthorized_Call) Return() *HttpErrorWriter_WriteUnauthorized_Call {
	_c.Call.Return()
	return _c
}

func (_c *HttpErrorWriter_WriteUnauthorized_Call) RunAndReturn(run func()) *HttpErrorWriter_WriteUnauthorized_Call {
	_c.Call.Return(run)
	return _c
}

// NewHttpErrorWriter creates a new instance of HttpErrorWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHttpErrorWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *HttpErrorWriter {
	mock := &HttpErrorWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
