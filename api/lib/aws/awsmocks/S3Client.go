// Code generated by mockery v2.36.1. DO NOT EDIT.

package awsmocks

import (
	aws "api/lib/aws"

	mock "github.com/stretchr/testify/mock"
)

// S3Client is an autogenerated mock type for the S3Client type
type S3Client struct {
	mock.Mock
}

type S3Client_Expecter struct {
	mock *mock.Mock
}

func (_m *S3Client) EXPECT() *S3Client_Expecter {
	return &S3Client_Expecter{mock: &_m.Mock}
}

// CreateSignedGetObjectUrl provides a mock function with given fields: _a0
func (_m *S3Client) CreateSignedGetObjectUrl(_a0 *aws.S3GetObjectRequest) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*aws.S3GetObjectRequest) (string, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*aws.S3GetObjectRequest) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*aws.S3GetObjectRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// S3Client_CreateSignedGetObjectUrl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateSignedGetObjectUrl'
type S3Client_CreateSignedGetObjectUrl_Call struct {
	*mock.Call
}

// CreateSignedGetObjectUrl is a helper method to define mock.On call
//   - _a0 *aws.S3GetObjectRequest
func (_e *S3Client_Expecter) CreateSignedGetObjectUrl(_a0 interface{}) *S3Client_CreateSignedGetObjectUrl_Call {
	return &S3Client_CreateSignedGetObjectUrl_Call{Call: _e.mock.On("CreateSignedGetObjectUrl", _a0)}
}

func (_c *S3Client_CreateSignedGetObjectUrl_Call) Run(run func(_a0 *aws.S3GetObjectRequest)) *S3Client_CreateSignedGetObjectUrl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*aws.S3GetObjectRequest))
	})
	return _c
}

func (_c *S3Client_CreateSignedGetObjectUrl_Call) Return(_a0 string, _a1 error) *S3Client_CreateSignedGetObjectUrl_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *S3Client_CreateSignedGetObjectUrl_Call) RunAndReturn(run func(*aws.S3GetObjectRequest) (string, error)) *S3Client_CreateSignedGetObjectUrl_Call {
	_c.Call.Return(run)
	return _c
}

// CreateSignedPutObjectUrl provides a mock function with given fields: _a0
func (_m *S3Client) CreateSignedPutObjectUrl(_a0 *aws.S3PutObjectRequest) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*aws.S3PutObjectRequest) (string, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*aws.S3PutObjectRequest) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*aws.S3PutObjectRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// S3Client_CreateSignedPutObjectUrl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateSignedPutObjectUrl'
type S3Client_CreateSignedPutObjectUrl_Call struct {
	*mock.Call
}

// CreateSignedPutObjectUrl is a helper method to define mock.On call
//   - _a0 *aws.S3PutObjectRequest
func (_e *S3Client_Expecter) CreateSignedPutObjectUrl(_a0 interface{}) *S3Client_CreateSignedPutObjectUrl_Call {
	return &S3Client_CreateSignedPutObjectUrl_Call{Call: _e.mock.On("CreateSignedPutObjectUrl", _a0)}
}

func (_c *S3Client_CreateSignedPutObjectUrl_Call) Run(run func(_a0 *aws.S3PutObjectRequest)) *S3Client_CreateSignedPutObjectUrl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*aws.S3PutObjectRequest))
	})
	return _c
}

func (_c *S3Client_CreateSignedPutObjectUrl_Call) Return(_a0 string, _a1 error) *S3Client_CreateSignedPutObjectUrl_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *S3Client_CreateSignedPutObjectUrl_Call) RunAndReturn(run func(*aws.S3PutObjectRequest) (string, error)) *S3Client_CreateSignedPutObjectUrl_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteObject provides a mock function with given fields: _a0
func (_m *S3Client) DeleteObject(_a0 *aws.S3DeleteObjectRequest) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*aws.S3DeleteObjectRequest) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// S3Client_DeleteObject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteObject'
type S3Client_DeleteObject_Call struct {
	*mock.Call
}

// DeleteObject is a helper method to define mock.On call
//   - _a0 *aws.S3DeleteObjectRequest
func (_e *S3Client_Expecter) DeleteObject(_a0 interface{}) *S3Client_DeleteObject_Call {
	return &S3Client_DeleteObject_Call{Call: _e.mock.On("DeleteObject", _a0)}
}

func (_c *S3Client_DeleteObject_Call) Run(run func(_a0 *aws.S3DeleteObjectRequest)) *S3Client_DeleteObject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*aws.S3DeleteObjectRequest))
	})
	return _c
}

func (_c *S3Client_DeleteObject_Call) Return(_a0 error) *S3Client_DeleteObject_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *S3Client_DeleteObject_Call) RunAndReturn(run func(*aws.S3DeleteObjectRequest) error) *S3Client_DeleteObject_Call {
	_c.Call.Return(run)
	return _c
}

// NewS3Client creates a new instance of S3Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewS3Client(t interface {
	mock.TestingT
	Cleanup(func())
}) *S3Client {
	mock := &S3Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
