// Code generated by mockery v2.36.1. DO NOT EDIT.

package configmocks

import mock "github.com/stretchr/testify/mock"

// HmacConfig is an autogenerated mock type for the HmacConfig type
type HmacConfig struct {
	mock.Mock
}

type HmacConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *HmacConfig) EXPECT() *HmacConfig_Expecter {
	return &HmacConfig_Expecter{mock: &_m.Mock}
}

// GetAuthTokenSecret provides a mock function with given fields:
func (_m *HmacConfig) GetAuthTokenSecret() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HmacConfig_GetAuthTokenSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAuthTokenSecret'
type HmacConfig_GetAuthTokenSecret_Call struct {
	*mock.Call
}

// GetAuthTokenSecret is a helper method to define mock.On call
func (_e *HmacConfig_Expecter) GetAuthTokenSecret() *HmacConfig_GetAuthTokenSecret_Call {
	return &HmacConfig_GetAuthTokenSecret_Call{Call: _e.mock.On("GetAuthTokenSecret")}
}

func (_c *HmacConfig_GetAuthTokenSecret_Call) Run(run func()) *HmacConfig_GetAuthTokenSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HmacConfig_GetAuthTokenSecret_Call) Return(_a0 string) *HmacConfig_GetAuthTokenSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *HmacConfig_GetAuthTokenSecret_Call) RunAndReturn(run func() string) *HmacConfig_GetAuthTokenSecret_Call {
	_c.Call.Return(run)
	return _c
}

// GetEmailSignupTokenSecret provides a mock function with given fields:
func (_m *HmacConfig) GetEmailSignupTokenSecret() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HmacConfig_GetEmailSignupTokenSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEmailSignupTokenSecret'
type HmacConfig_GetEmailSignupTokenSecret_Call struct {
	*mock.Call
}

// GetEmailSignupTokenSecret is a helper method to define mock.On call
func (_e *HmacConfig_Expecter) GetEmailSignupTokenSecret() *HmacConfig_GetEmailSignupTokenSecret_Call {
	return &HmacConfig_GetEmailSignupTokenSecret_Call{Call: _e.mock.On("GetEmailSignupTokenSecret")}
}

func (_c *HmacConfig_GetEmailSignupTokenSecret_Call) Run(run func()) *HmacConfig_GetEmailSignupTokenSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HmacConfig_GetEmailSignupTokenSecret_Call) Return(_a0 string) *HmacConfig_GetEmailSignupTokenSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *HmacConfig_GetEmailSignupTokenSecret_Call) RunAndReturn(run func() string) *HmacConfig_GetEmailSignupTokenSecret_Call {
	_c.Call.Return(run)
	return _c
}

// GetRefreshTokenSecret provides a mock function with given fields:
func (_m *HmacConfig) GetRefreshTokenSecret() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HmacConfig_GetRefreshTokenSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRefreshTokenSecret'
type HmacConfig_GetRefreshTokenSecret_Call struct {
	*mock.Call
}

// GetRefreshTokenSecret is a helper method to define mock.On call
func (_e *HmacConfig_Expecter) GetRefreshTokenSecret() *HmacConfig_GetRefreshTokenSecret_Call {
	return &HmacConfig_GetRefreshTokenSecret_Call{Call: _e.mock.On("GetRefreshTokenSecret")}
}

func (_c *HmacConfig_GetRefreshTokenSecret_Call) Run(run func()) *HmacConfig_GetRefreshTokenSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HmacConfig_GetRefreshTokenSecret_Call) Return(_a0 string) *HmacConfig_GetRefreshTokenSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *HmacConfig_GetRefreshTokenSecret_Call) RunAndReturn(run func() string) *HmacConfig_GetRefreshTokenSecret_Call {
	_c.Call.Return(run)
	return _c
}

// NewHmacConfig creates a new instance of HmacConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHmacConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *HmacConfig {
	mock := &HmacConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
